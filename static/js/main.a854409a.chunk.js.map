{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","songs","setSongInfo","songInfo","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","s","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnimation","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","size","onClick","icon","faCaretLeft","pause","faPauseCircle","faPlayCircle","faCaretRight","Song","src","cover","alt","name","artist","LibrarySong","song","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onEnded","onTimeUpdate","onLoadedMetadata","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a854409a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n        faPlayCircle, \r\n        faPauseCircle, \r\n        faCaretRight, \r\n        faCaretLeft \r\n    } from '@fortawesome/free-solid-svg-icons'\r\n// import Song from './Song'\r\n\r\nconst Player = ({\r\n        audioRef, \r\n        currentSong, \r\n        isPlaying, \r\n        setIsPlaying, \r\n        songs, \r\n        setSongInfo, \r\n        songInfo, \r\n        setCurrentSong,\r\n        setSongs\r\n    }) => {\r\n\r\n    //states\r\n    \r\n\r\n    //event-handers\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((s) => {\r\n            if(s.id === nextPrev.id){\r\n                return{...s, active : true}\r\n            }else{\r\n                return{...s, active : false}\r\n            }\r\n        })\r\n        setSongs(newSongs);\r\n    }\r\n\r\n    const playSongHandler = () => {\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    }\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n\r\n    const skipTrackHandler = async(direction) => {\r\n        let currentIndex = songs.findIndex((s) => s.id === currentSong.id );\r\n        if(direction === \"skip-forward\"){\r\n            await setCurrentSong(songs[(currentIndex+1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex+1) % songs.length]);\r\n        }\r\n\r\n        if(direction === \"skip-back\"){\r\n            if((currentIndex - 1) % songs.length === -1){\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if(isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex-1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex-1) % songs.length]);\r\n        }\r\n\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n\r\n    const trackAnimation = {\r\n        transform : `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n                    <input \r\n                        min={0} \r\n                        max={songInfo.duration || 0} \r\n                        value={songInfo.currentTime} \r\n                        onChange={dragHandler}\r\n                        type=\"range\" \r\n                    />\r\n                    <div style={trackAnimation} className=\"animate-track\"></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon \r\n                size = \"2x\" \r\n                onClick={() => {skipTrackHandler(\"skip-back\")}} \r\n                className=\"skip-back\" \r\n                icon={faCaretLeft}/>\r\n                \r\n                <FontAwesomeIcon \r\n                size = \"2x\" \r\n                onClick={playSongHandler} \r\n                className=\"play\" \r\n                icon={isPlaying ? faPauseCircle : faPlayCircle}/>\r\n                \r\n                <FontAwesomeIcon \r\n                size = \"2x\" \r\n                onClick={() => {skipTrackHandler(\"skip-forward\")}} \r\n                className=\"skip-forward\" \r\n                icon={faCaretRight}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from 'react'\r\n\r\nconst Song = ({currentSong}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover} alt={currentSong.name} />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import React from 'react'\r\n\r\nconst LibrarySong = ({ \r\n        song, \r\n        songs, \r\n        setCurrentSong, \r\n        audioRef, \r\n        isPlaying, \r\n        setSongs\r\n    }) => {\r\n\r\n    const songSelectHandler = async () => {\r\n        // const selectedSong = songs.filter((state) => state.id === song.id);\r\n        // console.log(selectedSong);\r\n        await setCurrentSong(song);\r\n        //Add active state\r\n        const newSongs = songs.map((s) => {\r\n            if(s.id === song.id){\r\n                return{...s, active : true}\r\n            }else{\r\n                return{...s, active : false}\r\n            }\r\n        })\r\n        setSongs(newSongs);\r\n        //check if the song is playing or not\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? \"selected\" : \"\"}`}>\r\n            <img src={song.cover} alt={song.name} />\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong\r\n","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\n\r\n        const Library = ({\r\n            audioRef, \r\n            songs, \r\n            setCurrentSong, \r\n            isPlaying, \r\n            setSongs, \r\n            libraryStatus\r\n        }) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <hr />\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => (\r\n                <LibrarySong \r\n                songs={songs} \r\n                setCurrentSong={setCurrentSong} \r\n                song={song}\r\n                key={song.id}\r\n                audioRef={audioRef}\r\n                isPlaying={isPlaying}\r\n                setSongs={setSongs}\r\n                />))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return (\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={()=>{\r\n                setLibraryStatus(!libraryStatus)\r\n            }}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Caravan\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/06/23b2ff959731b56ea8545828b462311e8b1a2bcc-1024x1024.jpg\",\r\n            artist: \"goosetaf, The Field Tapes, Makzo\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=20122\",\r\n            color: [\"#C7AADA\",\"#E6BDB3\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"What If I Told You\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/07/4163ebb931e06d4ee8eb184295c0246d4a5055f7-1024x1024.jpg\",\r\n            artist: \"Juan Rios\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=21649\",\r\n            color: [\"#3B1C3C\",\"#FFE4B7\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Dreamstate\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/05/732128e1da8fd5f6292ffc1926a2ea840a54f4d0-1024x1024.jpg\",\r\n            artist: \"Toonorth\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=17947\",\r\n            color: [\"#9FA0FC\",\"#384C69\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Travelbag\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/05/1245c0271290a3196328c0cf4aaa910cd873dfe7-1024x1024.jpg\",\r\n            artist: \"mommy, Sleepy Fish\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=19058\",\r\n            color: [\"#5C8DCF\",\"#393722\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Toddle\",\r\n            cover: \"https://uploads-ssl.webflow.com/5fc4bca9bd65e8f2bf87f576/60bdce340c4f5aea948e0b55_chillcards-p-500.png\",\r\n            artist: \"oddfish\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=16185\",\r\n            color: [\"#D74B4A\",\"#157873\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Perspective\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/07/3b73a510169f14c4af83ac4016e809917412702b-1024x1024.jpg\",\r\n            artist: \"fantompower\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=22794\",\r\n            color: [\"#724176\",\"#C8DBE1\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Wish\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg\",\r\n            artist: \"SwuM\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=15230\",\r\n            color: [\"#D4A87F\",\"#764635\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Cascade\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/70a56749b8b89815fa75446030c6ba57d2c34de7-1024x1024.jpg\",\r\n            artist: \"Knowmadic\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=13092\",\r\n            color: [\"#82D3A9\",\"#EDA04E\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default chillHop","import React, {useRef, useState } from 'react'\nimport './styles/App.scss';\n//Adding Cmponents\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\n//Importing Utils\nimport data from \"./data\";\n\nfunction App() {\n  //ref\n  const audioRef = useRef(null);\n\n  //States\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0])\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [songInfo, setSongInfo] = useState({\n      currentTime: 0,\n      duration: 0,\n      animationPercentage:0\n  })\n\n  //event-handlers\n  const timeUpdateHandler = (e) => {\n      const current = e.target.currentTime;\n      const duration = e.target.duration;\n      // calculate percentage\n      const roundedCurrent = Math.round(current);\n      const roundedDuration = Math.round(duration);\n      const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n\n      setSongInfo({\n        ...songInfo, \n        currentTime: current, \n        duration, \n        animationPercentage: animation\n      })\n  }\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((s) => s.id === currentSong.id );\n    await setCurrentSong(songs[(currentIndex+1) % songs.length])\n    if(isPlaying) audioRef.current.play();\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song currentSong={currentSong}/>\n      <Player \n        audioRef={audioRef} \n        isPlaying={isPlaying} \n        setIsPlaying={setIsPlaying} \n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs} \n        setSongs={setSongs}\n      />\n      <Library \n        audioRef={audioRef}\n        songs={songs} \n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio \n          onEnded={songEndHandler}\n          onTimeUpdate={timeUpdateHandler} \n          onLoadedMetadata={timeUpdateHandler}\n          ref={audioRef} \n          src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}